---
title: "random (class slides)"
format: revealjs
slide-number: true
df-print: kable
---

# CSC 110 -- Generating Random Numbers and Other Important Functions and Methods


## random module

We need to `import` the module `random`

What do the functions `.random()` and `.randint()` return?

```{python}
#| echo: true
import random

n = random.random()
print(n)

n = random.randint(0, 9)
print(n)
```

## Write a function

1. Function name is `pick_winner`
1. It takes a list as argument
1. It generates a random index, and returns the item at that position

```{python}
#| eval: false
#| echo: true
winner = pick_winner(["Peter", "Joan", "Mary", "June"])
print(winner)
```

## Write a function -- solution

```{python}
#| eval: true
#| echo: true
import random

def pick_winner(names):
  index = random.randint(0, len(names) - 1)
  return names[index]

if __name__ == "__main__":
  winner = pick_winner(["Peter", "Joan", "Mary", "June"])
  print(winner)
```

## Setting a seed 

What happens when you run `pick_winner` multiple times?

To get always the same result (for autograding purposes, for example) we can set a seed.

```{python}
#| eval: true
#| echo: true
import random

def pick_winner(names):
  index = random.randint(0, len(names) - 1)
  return names[index]

if __name__ == "__main__":
  random.seed(123)
  winner = pick_winner(["Peter", "Joan", "Mary", "June"])
  print(winner)
```


## Changing a list with random numbers

Write a function that takes as argument a list of integers. Iterate over each list element (with a `while` loop), replacing each integer with a random number between zero and the original integer.

Test case:

```{python}
#| eval: true
#| echo: false
import random
random.seed(123)

def random_list(original_list):
  index = 0
  while index < len(original_list):
    item = original_list[index]
    original_list[index] = random.randint(0, item)
    index += 1
  return original_list
  
```


```{python}
#| eval: true
#| echo: true
numbers = [3, 2, 1, 3, 5]
numbers = random_list(numbers)
print(numbers)
```

# Submit for gradescope attendance

Submit your `random_list` to gradescope.

Name your file `random_list.py` and remember to set a seed.

## Quiz 06

<center>
<div class="cleanslate w24tz-current-time w24tz-large" style="display: inline-block !important; visibility: hidden !important; min-width:300px !important; min-height:145px !important;"><a href="//24timezones.com/Tucson/time" style="text-decoration: none" class="clock24" id="tz24-1695057604-c1393-eyJob3VydHlwZSI6IjEyIiwic2hvd2RhdGUiOiIwIiwic2hvd3NlY29uZHMiOiIwIiwiY29udGFpbmVyX2lkIjoiY2xvY2tfYmxvY2tfY2I2NTA4ODZjNDg0OWVlIiwidHlwZSI6ImRiIiwibGFuZyI6ImVuIn0=" title="World Time :: Tucson" target="_blank" rel="nofollow"></a>current time<div id="clock_block_cb650886c4849ee"></div></div>
<script type="text/javascript" src="//w.24timezones.com/l.js" async></script>
</center>

You have 10 minutes to complete the quiz

* No need for comments, no need for a `main()`, no test cases
* Just write your function and what's inside the function
* USE A WHILE LOOP

Built-in functions you can use: `round()`, `input()`, `float()`, `str()`, `int()`, `len()` — you don’t have to use all of these